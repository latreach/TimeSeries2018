select(Fecha, Total.de.Me.gusta, Alcance.total.Diario,
Alcance.organico.Diario) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)]
return(Y)
}) %>% do.call("rbind", .)
names(datos1)<- names(datos2)
datosHomologaFB <- rbind(datos1, datos2) %>%
unique
datosHomologaFB %>%
write.csv("datos/facebook/datosHomologadosFB.csv",
row.names=F)
datos1 <- read_excel("datos/twitter/TW - Engagement - SEAT México - 2017-09-25.xlsx",
sheet = 3, skip = 1) %>%
data.frame()
datos2 <- read_excel("datos/twitter/TW - Followers - SEAT México - 2017-09-25.xlsx",
sheet = 3, skip = 1) %>%
data.frame()
datos1 <- datos1 %>%
select(Date, Likes, Replies, Retweets, Total.Interactions)
datos2 <- datos2 %>%
select(Date, Growth.of.Total.Followers)
datosHomologaTW <- datos2 %>%
left_join(datos1, by="Date")
names(datosHomologaTW)<- c("Fecha", "Seguidores", "MeGusta", "Respuestas",
"Retweets", "Totales")
datosHomologaTW %>%
write.csv("datos/twitter/datosHomologadosTW.csv",
row.names=F)
read_excel("datos/instagram/IG - Followers - SEAT México - 2017-09-25.xlsx",
sheet = 3, skip = 1) %>%
data.frame()
read_excel("datos/instagram/IG - Engagement - SEAT México - 2017-09-25.xlsx",
sheet = 3, skip = 1) %>%
data.frame()
datos1 <- read_excel("datos/instagram/IG - Engagement - SEAT México - 2017-09-25.xlsx",
sheet = 3, skip = 1) %>%
data.frame()
datos2 <- read_excel("datos/instagram/IG - Followers - SEAT México - 2017-09-25.xlsx",
sheet = 3, skip = 1) %>%
data.frame()
datos1 %>% head
datos1 <- datos1 %>%
select(Date, Likes, Comments,  Total.Interactions)
datos2 %>% head()
datos2 %>%
select(Date, Growth.of.Total.Followers)
datos2 <- datos2 %>%
select(Date, Growth.of.Total.Followers)
datosHomologaIN <- datos2 %>%
left_join(datos1, by="Date")
names(datosHomologaIN)
names(datosHomologaIN) <- c("Fecha", "Seguidores", "MeGusta", "Comentarios",
"Totales")
datosHomologaIN %>%
write.csv("datos/instagram/datosHomologadosIN.csv",
row.names=F)
datos1 <- read.csv("datos/youtube/insights/suscritos.csv",
header = T)
datos2 <- read.csv("datos/youtube/visualizaciones/vistas.csv",
header = T)
datos1 %>% head
datos2 %>% head
datos1 <- datos1 %>%
select(date, subscribers)
datos2 <- datos2 %>%
select(date, views)
datos1 %>% left_join(datos2, by="date")
datosHomologaYT <- datos1 %>%
left_join(datos2, by="date")
names(datosHomologaYT)
names(datosHomologaYT) <- c("Fecha", "Subscriptores", "Vistas")
datosHomologaYT %>%
write.csv("datos/youtube/datosHomologadosYT.cv",
row.names=F)
datosHomologaYT %>%
write.csv("datos/youtube/datosHomologadosYT.csv",
row.names=F)
fb <- read.csv("datos/facebook/datosHomologadosFB.csv",
header = T)
tw <- read.csv("datos/twitter/datosHomologadosTW.csv")
ins <- read.csv("datos/instagram/datosHomologadosIN.csv")
yt <- read.csv("datos/youtube/datosHomologadosYT.csv")
fb %>%
head
fb %>%
head
fb %>%
head
fb[,2]
totalesFansDiario <- xts(fb[,2], as.Date(fb[,1]))
totalesFansDiario %>%
head
totalesFansDiario %>%
plot
totalesFansDiario %>%
plot
seq_along(totalesFansDiario)
secuenciaTotales <- seq_along(totalesFansDiario)
secuenciaTotales %>%
head
lm(coredata(totalesFansDiario)~secuenciaTotales)
lm(coredata(totalesFansDiario)~secuenciaTotales) %>%
summary
totalesFansDiario %>% head
totalesFansDiario %>% plot
modeloLineal <- lm(coredata(totalesFansDiario)~secuenciaTotales)
totalesFansDiario %>% head
totalesFansDiario %>% plot
totalesFansDiario
fechaFinal <- as.Date("2019-01-01")
last(totalesFansDiario)
diferenciaLineal <- difftime(fechaFinal, time(last(totalesFansDiario)))
diferenciaLineal
as.numeric(diferenciaLineal)
ceiling(as.numeric(diferenciaLineal))
diferenciaLineal <- ceiling(as.numeric(diferenciaLineal))
length(totalesFansDiario)
Time_predLineal <- 1:length(totalesFansDiario) + diferenciaLineal
Time_predLineal
modeloLineal
predict(modeloLineal, newdata = list(secuenciaTotales = Time_predLineal) )
predict(modeloLineal, newdata = list(secuenciaTotales = Time_predLineal) ) %>%
plot
predLineal <- predict(modeloLineal, newdata = list(secuenciaTotales = Time_predLineal))
totalesFansDiario
xts(predLineal, seq(ymd(20160101), by="day", length.out = length(predLineal)))
xts(predLineal, seq(ymd(20160101), by="day", length.out = length(predLineal))) %>%
plot
length.out = length(predLineal)
length.out
Time_predLineal
Time_predLineal
secuenciaTotales
secuenciaTotales
modeloLineal
nolineal
Time_predLineal
predLineal <- predict(modeloLineal,
newdata = list(secuenciaTotales = Time_predLineal))
length(predLineal)
Time_predLineal <- 1:(length(totalesFansDiario) + diferenciaLineal)
predLineal <- predict(modeloLineal,
newdata = list(secuenciaTotales = Time_predLineal))
length(predLineal)
xts(predLineal, seq(ymd(20160101), by="day", length.out = length(predLineal))) %>%
plot
predLineal <- xts(predLineal, seq(ymd(20160101), by="day",
length.out = length(predLineal)))
predLineal
cbind(totalesFansDiario, predLineal)
totalesFansDiario
predLineal
cbind(totalesFansDiario, predLineal) %>%  na.omit
cbind(totalesFansDiario, predLineal) %>%  na.omit %>%
plot
cbind(totalesFansDiario, predLineal) %>%  na.omit %>%
dygraph()
predLineal
predLineal %>%  tail()
time(last(totalesFansDiario)
)
fechaFinal
fechaFinal <- as.Date("2019-01-01")
totalesFansDiario <- xts(fb[,2], as.Date(fb[,1]))
secuenciaTotales <- seq_along(totalesFansDiario)
modeloLineal <- lm(coredata(totalesFansDiario) ~ secuenciaTotales)
diferenciaLineal <- difftime(fechaFinal, time(last(totalesFansDiario)))
diferenciaLineal <- ceiling(as.numeric(diferenciaLineal))
Time_predLineal <- 1:(length(totalesFansDiario) + diferenciaLineal)
predLineal <- predict(modeloLineal,
newdata = list(secuenciaTotales = Time_predLineal))
predLineal <- xts(predLineal, seq(ymd(20160101), by="day",
length.out = length(predLineal)))
predLineal
predLineal %>%  dygraph()
predLineal %>%  dygraph()
predLineal
seq(ymd(20160101), by="day",
length.out = length(predLineal)
)
length(totalesFansDiario)
diferenciaLineal
672+436
Time_predLineal
Time_predLineal
Time_predLineal %>%  length()
(length(totalesFansDiario) + diferenciaLineal)
length(totalesFansDiario)
diferenciaLineal
Time_predLineal <- 1:(length(totalesFansDiario) + (diferenciaLineal))
Time_predLineal
(length(totalesFansDiario) + (diferenciaLineal))
(diferenciaLineal)
length(totalesFansDiario)
(length(totalesFansDiario) + (diferenciaLineal))
length(totalesFansDiario)
(diferenciaLineal)
672+464
totalesFansDiario <- xts(fb[,2], as.Date(fb[,1]))
secuenciaTotales <- seq_along(totalesFansDiario)
modeloLineal <- lm(coredata(totalesFansDiario) ~ secuenciaTotales)
diferenciaLineal <- difftime(fechaFinal, time(last(totalesFansDiario)))
diferenciaLineal <- ceiling(as.numeric(diferenciaLineal))
diferenciaLineal
time(last(totalesFansDiario))
diferenciaLineal <- difftime(fechaFinal, time(last(totalesFansDiario)))
diferenciaLineal
totalesFansDiario
cbind(totalesFansDiario, predLineal) %>%  na.omit %>%
dygraph()
cbind(totalesFansDiario, predLineal) %>%
dygraph()
cbind(totalesFansDiario, predLineal)
totalesFansDiario
totalesFansDiario %>%  length()
totalesFansDiario %>%  unique %>% length()
totalesFansDiario <- xts(fb[,2], as.Date(fb[,1])) %>%
unique
totalesFansDiario
totalesFansDiario <- xts(fb[,2], as.Date(fb[,1])) %>%
unique
secuenciaTotales <- seq_along(totalesFansDiario)
modeloLineal <- lm(coredata(totalesFansDiario) ~ secuenciaTotales)
diferenciaLineal <- difftime(fechaFinal, time(last(totalesFansDiario)))
diferenciaLineal <- ceiling(as.numeric(diferenciaLineal))
Time_predLineal <- 1:(length(totalesFansDiario) + (diferenciaLineal))
totalesFansDiario <- xts(fb[,2], as.Date(fb[,1])) %>%
unique
secuenciaTotales <- seq_along(totalesFansDiario)
modeloLineal <- lm(coredata(totalesFansDiario) ~ secuenciaTotales)
diferenciaLineal <- difftime(fechaFinal, time(last(totalesFansDiario)))
time(last(totalesFansDiario))
last(totalesFansDiario)
totalesFansDiario
fb$Fecha %>%  duplicated()
fb %>%
filter(duplicated(Fecha))
fb %>%
filter(Fecha=="2017-03-09")
fb %>%
unique %>%  dim
totalesFansDiario <- xts(unique(fb[,2]), as.Date(unique(fb[,1])))
unique(fb[,2]),
unique(fb[,2])
unique(fb[,1])
as.Date(unique(fb[,1]))
totalesFansDiario <- xts(unique(fb[,2]), as.Date(unique(fb[,1])))
as.Date(unique(fb[,1])) %>%  length()
as.Date(unique(fb[,1]))
as.Date(unique(fb[,1])) %>%  length()
unique(fb[,1]) %>%  length()
fansFB <- unique(fb$Total.de.Me.gusta)
fechasFB <- unique(fb$Fecha)
totalesFansDiario <- xts(fansFB, as.Date(fechasFB))
fansFB
as.Date(fechasFB)
unique(fb$Total.de.Me.gusta)
datos1 <- read.csv("datos/facebook/2016.csv", header = T)
datos1 <- datos1 %>%
select(Date, Lifetime.Total.Likes, Daily.Total.Reach, Daily.Organic.Reach) %>%
data.table %>%
.[, Date := as.Date(Date)]
archivos <- list.files("datos/facebook/", pattern = "*.xlsx", full.names = T)
datos2 <- lapply(archivos, function(hoja){
Y <- read_excel(hoja, sheet = 1 ) %>%
data.frame
names(Y)<- gsub(".Total", "", names(Y))
names(Y)<- gsub("Alcance.total.por.día", "Alcance.total.Diario", names(Y))
names(Y)<- gsub("Alcance.orgánico.por.día", "Alcance.orgánico.Diario",
names(Y))
names(Y) <- iconv(names(Y), to = "ASCII//TRANSLIT")
Y <- Y %>%
select(Fecha, Total.de.Me.gusta, Alcance.total.Diario,
Alcance.organico.Diario) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)]
return(Y)
}) %>% do.call("rbind", .)
names(datos1)<- names(datos2)
datosHomologaFB <- rbind(datos1, datos2) %>%
unique
datosHomologaFB %>%  dim
datosHomologaFB %>%
head
datosHomologaFB$Fecha %>% duplicated()
datosHomologaFB$Fecha[datosHomologaFB$Fecha %>% duplicated()]
fechaDoble <- datosHomologaFB$Fecha[datosHomologaFB$Fecha %>% duplicated()]
datosHomologaFB %>%
filter(Fecha %in% fechaDoble)
datosHomologaFB$Fecha %>% duplicated()
fechaDoble <- datosHomologaFB$Fecha[duplicated(datosHomologaFB$Fecha)]
datosHomologaFB %>%
filter(Fecha %in% fechaDoble)
fechaDoble
?duplicated()
datosHomologaFB <- datosHomologaFB %>%
data.table
datosHomologaFB %>% head
duplicated(datosHomologaFB)
data.table::duplicated(datosHomologaFB)
####################################
#Creado por Fernando Dorantes Nieto
#                                   <(°)
#                                     ( >)"
#                                      /|
####################################
library(magrittr)
c("dplyr","tidyr","lubridate","tseries", "astsa","forecast","ggplot2",
"lattice", "dygraphs","XLConnect", "palettetown", "xts", "Rfacebook",
"twitteR") %>%
sapply(require, character.only=T)
setwd("~/local/TimeSeries18/")
# Facebook ----------------------------------------------------------------
datos1 <- read.csv("datos/facebook/2016.csv", header = T)
datos1 <- datos1 %>%
select(Date, Lifetime.Total.Likes, Daily.Total.Reach, Daily.Organic.Reach) %>%
data.table %>%
.[, Date := as.Date(Date)]
archivos <- list.files("datos/facebook/", pattern = "*.xlsx", full.names = T)
datos2 <- lapply(archivos, function(hoja){
Y <- read_excel(hoja, sheet = 1 ) %>%
data.frame
names(Y)<- gsub(".Total", "", names(Y))
names(Y)<- gsub("Alcance.total.por.día", "Alcance.total.Diario", names(Y))
names(Y)<- gsub("Alcance.orgánico.por.día", "Alcance.orgánico.Diario",
names(Y))
names(Y) <- iconv(names(Y), to = "ASCII//TRANSLIT")
Y <- Y %>%
select(Fecha, Total.de.Me.gusta, Alcance.total.Diario,
Alcance.organico.Diario) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)]
return(Y)
}) %>% do.call("rbind", .)
names(datos1)<- names(datos2)
datosHomologaFB <- rbind(datos1, datos2) %>%
unique
datosHomologaFB <- datosHomologaFB %>%
data.table
data.table::duplicated(datosHomologaFB)
(datosHomologaFB
datosHomologaFB %>%  class
duplicated(datosHomologaFB$Fecha)
datosHomologaFB$Fecha[duplicated(datosHomologaFB$Fecha)]
datosHomologaFB %>%
filter(Fecha=="2017-03-01")
datosHomologaFB %>%
group_by(Fecha) %>%
summarise(max(Alcance.organico.Diario))
####################################
#Creado por Fernando Dorantes Nieto
#                                   <(°)
#                                     ( >)"
#                                      /|
####################################
library(magrittr)
c("dplyr","tidyr","lubridate","tseries", "astsa","forecast","ggplot2",
"lattice", "dygraphs","XLConnect", "palettetown", "xts", "Rfacebook",
"twitteR") %>%
sapply(require, character.only=T)
setwd("~/local/TimeSeries18/")
# Facebook ----------------------------------------------------------------
datos1 <- read.csv("datos/facebook/2016.csv", header = T)
datos1 <- datos1 %>%
select(Date, Lifetime.Total.Likes, Daily.Total.Reach, Daily.Organic.Reach) %>%
data.table %>%
.[, Date := as.Date(Date)]
archivos <- list.files("datos/facebook/", pattern = "*.xlsx", full.names = T)
datos2 <- lapply(archivos, function(hoja){
Y <- read_excel(hoja, sheet = 1 ) %>%
data.frame
names(Y)<- gsub(".Total", "", names(Y))
names(Y)<- gsub("Alcance.total.por.día", "Alcance.total.Diario", names(Y))
names(Y)<- gsub("Alcance.orgánico.por.día", "Alcance.orgánico.Diario",
names(Y))
names(Y) <- iconv(names(Y), to = "ASCII//TRANSLIT")
Y <- Y %>%
select(Fecha, Total.de.Me.gusta, Alcance.total.Diario,
Alcance.organico.Diario) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)]
return(Y)
}) %>% do.call("rbind", .)
names(datos1)<- names(datos2)
datosHomologaFB <- rbind(datos1, datos2) %>%
unique
datosHomologaFB %>%
group_by(Fecha) %>%
summarise(alcanceMax <- max(Alcance.organico.Diario))
maxAlcance <- datosHomologaFB %>%
group_by(Fecha) %>%
summarise(alcanceMax = max(Alcance.organico.Diario))
maxAlcance %>% head
datosHomologaFB %>%
left_join(maxAlcance, by=Fecha)
datosHomologaFB %>%
left_join(maxAlcance, by="Fecha")
datosHomologaFB %>%
left_join(maxAlcance, by="Fecha") %>%
filter( Alcance.organico.Diario == alcanceMax)
datosHomologaFB %>%
left_join(maxAlcance, by="Fecha") %>%
filter( Alcance.organico.Diario == alcanceMax) %>%  dim
datosHomologaFB %>%
left_join(maxAlcance, by="Fecha") %>%
filter( Alcance.organico.Diario == alcanceMax) %>%
select(- alcanceMax)
datosHomologaFB <- datosHomologaFB %>%
left_join(maxAlcance, by="Fecha") %>%
filter( Alcance.organico.Diario == alcanceMax) %>%
select(- alcanceMax)
####################################
#Creado por Fernando Dorantes Nieto
#                                   <(°)
#                                     ( >)"
#                                      /|
####################################
library(magrittr)
c("dplyr","tidyr","lubridate","tseries", "astsa","forecast","ggplot2",
"lattice", "dygraphs","XLConnect", "palettetown", "xts", "Rfacebook",
"twitteR") %>%
sapply(require, character.only=T)
setwd("~/local/TimeSeries18/")
# Facebook ----------------------------------------------------------------
datos1 <- read.csv("datos/facebook/2016.csv", header = T)
datos1 <- datos1 %>%
select(Date, Lifetime.Total.Likes, Daily.Total.Reach, Daily.Organic.Reach) %>%
data.table %>%
.[, Date := as.Date(Date)]
archivos <- list.files("datos/facebook/", pattern = "*.xlsx", full.names = T)
datos2 <- lapply(archivos, function(hoja){
Y <- read_excel(hoja, sheet = 1 ) %>%
data.frame
names(Y)<- gsub(".Total", "", names(Y))
names(Y)<- gsub("Alcance.total.por.día", "Alcance.total.Diario", names(Y))
names(Y)<- gsub("Alcance.orgánico.por.día", "Alcance.orgánico.Diario",
names(Y))
names(Y) <- iconv(names(Y), to = "ASCII//TRANSLIT")
Y <- Y %>%
select(Fecha, Total.de.Me.gusta, Alcance.total.Diario,
Alcance.organico.Diario) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)]
return(Y)
}) %>% do.call("rbind", .)
names(datos1)<- names(datos2)
datosHomologaFB <- rbind(datos1, datos2) %>%
unique
#### datos raros de FB
maxAlcance <- datosHomologaFB %>%
group_by(Fecha) %>%
summarise(alcanceMax = max(Alcance.organico.Diario))
datosHomologaFB <- datosHomologaFB %>%
left_join(maxAlcance, by="Fecha") %>%
filter( Alcance.organico.Diario == alcanceMax) %>%
select(- alcanceMax)
datosHomologaFB %>%
write.csv("datos/facebook/datosHomologadosFB.csv",
row.names=F)
fb <- read.csv("datos/facebook/datosHomologadosFB.csv",
header = T)
fansFB <- unique(fb$Total.de.Me.gusta)
fechasFB <- unique(fb$Fecha)
totalesFansDiario <- xts(unique(fb[,2]), as.Date(unique(fb[,1])))
totalesFansDiario <- xts(fansFB, as.Date(fechasFB))
totalesFansDiario <- xts(unique(fb[,2]), as.Date(unique(fb[,1])))
secuenciaTotales <- seq_along(totalesFansDiario)
modeloLineal <- lm(coredata(totalesFansDiario) ~ secuenciaTotales)
diferenciaLineal <- difftime(fechaFinal, time(last(totalesFansDiario)))
diferenciaLineal <- ceiling(as.numeric(diferenciaLineal))
Time_predLineal <- 1:(length(totalesFansDiario) + (diferenciaLineal))
predLineal <- predict(modeloLineal,
newdata = list(secuenciaTotales = Time_predLineal))
predLineal <- xts(predLineal, seq(ymd(20160101), by="day",
length.out = length(predLineal)))
cbind(totalesFansDiario, predLineal)
cbind(totalesFansDiario, predLineal) %>%
dygraph()
fb
xts(unique(fb[,2]), as.Date(unique(fb[,1])))
plot(totalesFansDiario)
totalesFansDiario <- xts(fb[,2], as.Date(fb[,1]))
plot(totalesFansDiario)
secuenciaTotales <- seq_along(totalesFansDiario)
modeloLineal <- lm(coredata(totalesFansDiario) ~ secuenciaTotales)
diferenciaLineal <- difftime(fechaFinal, time(last(totalesFansDiario)))
diferenciaLineal <- ceiling(as.numeric(diferenciaLineal))
Time_predLineal <- 1:(length(totalesFansDiario) + (diferenciaLineal))
predLineal <- predict(modeloLineal,
newdata = list(secuenciaTotales = Time_predLineal))
predLineal <- xts(predLineal, seq(ymd(20160101), by="day",
length.out = length(predLineal)))
cbind(totalesFansDiario, predLineal) %>%
dygraph()
cbind(totalesFansDiario, predLineal)
cbind(totalesFansDiario, predLineal) %>% tail
fansLineal <- cbind(totalesFansDiario, predLineal)
fansLineal["2017-08-24"]
1776492-1687581
1687581/1776492
1-1687581/1776492
(1-(1687581/1776492))*100
ggFansLineal <- data.frame(fecha = time(fansLineal),
data.frame(fansLineal))
time(fansLineal)
data.frame(fansLineal)
data.frame(fansLineal) %>%  dim
time(fansLineal) %>%  length()
ggFansLineal <- data.frame(fecha = time(fansLineal),
data.frame(fansLineal))
ggFansLineal
