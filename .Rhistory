.[, mes   := month(Fecha)] %>%
head
impressionsPost %>%
data.table %>%
.[, Fecha := as.Date(Fecha)] %>%
.[, mes   := month(Fecha)] %>%
.[, anio  := year(Fecha)] %>%
group_by(anio, mes) %>%
head
impressionsPost %>%
select(porcentajeImpresiones) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)] %>%
.[, mes   := month(Fecha)] %>%
.[, anio  := year(Fecha)] %>%
group_by(anio, mes) %>%
summarise_all(funs(sum))
impressionsPost %>%
select(-porcentajeImpresiones) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)] %>%
.[, mes   := month(Fecha)] %>%
.[, anio  := year(Fecha)] %>%
group_by(anio, mes) %>%
summarise_all(funs(sum))
impressionsPost %>%
select(-porcentajeImpresiones) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)] %>%
.[, mes   := month(Fecha)] %>%
.[, anio  := year(Fecha)] %>%
select(-Fecha) %>%
group_by(anio, mes) %>%
summarise_all(funs(sum))
impressionsPost %>%
select(-porcentajeImpresiones) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)] %>%
.[, mes   := month(Fecha)] %>%
.[, anio  := year(Fecha)] %>%
select(-Fecha) %>%
group_by(anio, mes) %>%
summarise_all(funs(sum)) %>%
data.table %>%
.[, Fecha := paste0(anio, "-",  mes, "-", "01")] %>% head
impressionsPost %>%
select(-porcentajeImpresiones) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)] %>%
.[, mes   := month(Fecha)] %>%
.[, anio  := year(Fecha)] %>%
select(-Fecha) %>%
group_by(anio, mes) %>%
summarise_all(funs(sum)) %>%
data.table %>%
.[, Fecha := paste0(anio, "-",  mes, "-", "01")] %>%
select(Fecha, interaccionesTotal, impressionsPost) %>%
head
impressionsPost %>%
select(-porcentajeImpresiones) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)] %>%
.[, mes   := month(Fecha)] %>%
.[, anio  := year(Fecha)] %>%
select(-Fecha) %>%
group_by(anio, mes) %>%
summarise_all(funs(sum)) %>%
data.table %>%
.[, Fecha := paste0(anio, "-",  mes, "-", "01")] %>%
.[, porcentajeImpresiones := interaccionesTotal/impressionsPost] %>%
.[, porcentajeImpresiones := porcentajeImpresiones*100] %>%
select(Fecha, interaccionesTotal, impressionsPost, porcentajeImpresiones) %>%
head
impressionsPost <- impressionsPost %>%
select(-porcentajeImpresiones) %>%
data.table %>%
.[, Fecha := as.Date(Fecha)] %>%
.[, mes   := month(Fecha)] %>%
.[, anio  := year(Fecha)] %>%
select(-Fecha) %>%
group_by(anio, mes) %>%
summarise_all(funs(sum)) %>%
data.table %>%
.[, Fecha := paste0(anio, "-",  mes, "-", "01")] %>%
.[, porcentajeImpresiones := interaccionesTotal/impressionsPost] %>%
.[, porcentajeImpresiones := porcentajeImpresiones*100] %>%
select(Fecha, interaccionesTotal, impressionsPost, porcentajeImpresiones)
impressionsTS <- xts(log10(impressionsPost$porcentajeImpresiones),
as.Date(impressionsPost$Fecha))
impressionsTS1 <- xts(impressionsPost$porcentajeImpresiones,
as.Date(impressionsPost$Fecha))
impressionsTS%>% plot
impressionsTS1%>% plot
impressionsTS1%>% plot(ylim=c(0.5, 3))
####################################
#Creado por Fernando Dorantes Nieto
#                                   <(°)
#                                     ( >)"
#                                      /|
####################################
# Librerías ---------------------------------------------------------------
library(magrittr)
c("data.table", "dplyr", "tidyr", "purrr",
"reshape2", "lubridate", "stringr", "stringi",
"text2vec", "stringdist", "tm", "geonames", "ggmap") %>%
sapply(require, character.only=T)
source("~/local/malli_analisis/union_postventa/funcionesPostVenta.R")
# Datos -------------------------------------------------------------------
setwd("~/local/DanyVWexperiencia/")
mails <- read.csv("mailsSeparados/datos/Campaña_Calentamiento_IP_Clientes_Septiembre_2017.csv",
header = T)
nombresoriginal <- names(mails)
####################################
#Creado por Fernando Dorantes Nieto
#                                   <(°)
#                                     ( >)"
#                                      /|
####################################
# Librerías ---------------------------------------------------------------
library(magrittr)
c("data.table", "dplyr", "tidyr", "purrr",
"reshape2", "lubridate", "stringr", "stringi",
"text2vec", "stringdist", "tm", "geonames", "ggmap") %>%
sapply(require, character.only=T)
source("~/local/malli_analisis/union_postventa/funcionesPostVenta.R")
# Datos -------------------------------------------------------------------
setwd("~/local/DanyVWexperiencia/")
mails <- read.csv("mailsSeparados/datos/Campaña_Calentamiento_IP_Clientes_Septiembre_2017.csv",
header = T)
setwd("~/local/DanyVWexperiencia/")
mails <- read.csv("mailsSeparados/datos/Campania_Calentamiento_IP_Clientes_Septiembre_2017.csv",
header = T)
nombresoriginal <- names(mails)
mails <- mails %>%
data.table %>%
.[, id := 1:length(Correo)]
mails <- mails %>%
separate(Correo, c("part1M", "part2M" ), sep="[@]")
mails2 <- read.csv("mailsSeparados/datos/envio_5.csv", header = T,
stringsAsFactors = F)
nombresoriginal <- names(mails)
mails <- mails %>%
data.table %>%
.[, id := 1:length(Correo)]
mails %>% head
mails <- read.csv("mailsSeparados/datos/Campania_Calentamiento_IP_Clientes_Septiembre_2017.csv",
header = T)
mails2 <- read.csv("mailsSeparados/datos/envio_5.csv", header = T,
stringsAsFactors = F)
nombresoriginal <- names(mails)
mails <- mails
data.table %>%
.[, id := 1:length(Correo)]
mails <- read.csv("mailsSeparados/datos/Campania_Calentamiento_IP_Clientes_Septiembre_2017.csv",
header = T)
mails2 <- read.csv("mailsSeparados/datos/envio_5.csv", header = T,
stringsAsFactors = F)
nombresoriginal <- names(mails)
mails <- mails %>%
data.table %>%
.[, id := 1:length(Correo)]
mails <- mails %>%
separate(Correo, c("part1M", "part2M" ), sep="[@]")
mails2 %>% head
mails2 <- mails2 %>%
separate(Correo, c("part1M", "part2M" ), sep="[@]")
mails2
mails %>% head
mails %>%
select(part1M, part2M )
mails <- mails %>%
select(part1M, part2M )
mails %>% head
merge(mails2, mails, by="part1M")> %>%  dim
merge(mails2, mails, by="part1M") %>%  dim
mails2 %>% dim
merge(mails2, mails, by="part1M") %>%
head
merge(mails2, mails, by="part1M") %>%
unique
merge(mails2, mails, by="part1M") %>%
unique %>%  dim
mails2 %>% head
X <- merge(mails2, mails, by="part1M") %>%
unique
merge(mails2, mails, by="part1M") %>% dim
X <- merge(mails2, mails, by="part1M") %>%
unique
X %>% head
mails$part1M %in% mails2$part1M
mails$part1M %in% mails2$part1M %>%  table
mails2$part1M %in% mails$part1M %>%  table
impressionsTS1%>% plot(ylim=c(0.5, 3))
impressionsTS1 <- xts(log10(impressionsPost$porcentajeImpresiones),
as.Date(impressionsPost$Fecha))
impressionsTS <- xts(impressionsPost$porcentajeImpresiones,
as.Date(impressionsPost$Fecha))
impressionsTS %>% plot
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima()
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=9)
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=9) %>%
plot
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=9) %>%
.$mean
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=9) %>%
.$mean %>%  mean
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=9)
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=9) %>%  data.frame()
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=9) %>%  dim
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=12)
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=12) %>%
plot
impressionsTS %>% tail
impressionsTS['/2017-09-01']
impressionsTS['/2017-08-01']
impressionsTS['/2017-08-01' %>% ]
impressionsTS['/2017-08-01'] %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=12) %>%
plot
impressionsTS['/2017-08-01'] %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=12)
impressionsTS['/2017-08-01'] %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=12) %>%
.$mean
impressionsTS['/2017-08-01'] %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=12) %>%
.$mean %>%  mean
arimaImpressions <- impressionsTS['/2017-08-01'] %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=9)
impressionsTS  <- impressionsTS['/2017-08-01']
time(last(impressionsTS))
diffimpresiones <- difftime(fechaFinal2, time(last(impressionsTS)))
diffimpresiones
as.numeric(diffimpresiones)/30
diffimpresiones <- as.numeric(diffimpresiones)/30
diffimpresiones <- floor(diffimpresiones)
diffimpresiones
arimaImpressions <- impressionsTS['/2017-08-01'] %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=diffimpresiones)
pronosticoImpresiones <- xts(arimaImpressions$mean,
seq.POSIXt(as.POSIXct(last(alcancets)),
length.out =  diffimpresiones,
by="month"))
pronosticoImpresiones <- xts(arimaImpressions$mean,
seq.POSIXt(as.POSIXct(last(impressionsTS)),
length.out =  diffimpresiones,
by="month"))
impressionsTime <- cbind(impressionsTS, pronosticoImpresiones)
names(impressionsTime)<- c("Observado", "Pronostico")
ggimpressionsTime <- data.frame(fecha = time(impressionsTime), data.frame(impressionsTime))
promedioImpressionsO <- mean(impressionsTS["2017-01-01/2017-09-24"], na.rm=T)
maxImpressionsO <- max(impressionsTS["2017-01-01/2017-09-24"], na.rm=T)
minImpressionsO<-min(impressionsTS["2017-01-01/2017-09-24"], na.rm=T)
promedioImpressionsP<-mean(pronosticoImpresiones, na.rm=T)
promedioImpressionsP
minImpressionsO
maxImpressionsO
promedioImpressionsO
impressionsTS1 <- xts(log10(impressionsPost$porcentajeImpresiones),
as.Date(impressionsPost$Fecha))
impressionsTS <- xts(impressionsPost$porcentajeImpresiones,
as.Date(impressionsPost$Fecha))
impressionsTS  <- impressionsTS['/2017-08-01']
diffimpresiones <- difftime(fechaFinal2, time(last(impressionsTS)))
diffimpresiones <- as.numeric(diffimpresiones)/30
diffimpresiones <- floor(diffimpresiones)
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima()
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(1,1,1)) %>%
forecast(h=diffimpresiones)
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(1,1,1))
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima()
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(1,1,1)) %>%
forecast(h=diffimpresiones) %>%
plot
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(1,1,2)) %>%
forecast(h=diffimpresiones) %>%
plot
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(2,1,2)) %>%
forecast(h=diffimpresiones) %>%
plot
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(2,1,2))
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(0,1,2)) %>%
forecast(h=diffimpresiones) %>%
plot
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(0,1,2))
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima()
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(0,1,1)) %>%
forecast(h=diffimpresiones) %>%
plot
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(0,1,1))
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(0,1,0))
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima()
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(1,1,0))
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(1,1,0)) %>%
forecast(h=diffimpresiones) %>%
plot
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(1,1,0)) %>%
forecast(h=diffimpresiones) %>%
.$mean
impressionsTS %>%
ts %>%
coredata() %>%
Arima(order = c(1,1,0)) %>%
forecast(h=diffimpresiones) %>%
.$mean %>%  mean
impressionsTS %>%
ts %>%
coredata() %>%
auto.arima() %>%
forecast(h=diffimpresiones) %>%
.$mean %>%  mean
####################################
#Creado por Fernando Dorantes Nieto <(°)
#                                     ( >)"
#                                      /|
####################################
######
#Cargando las librerías
######
# Librerias ---------------------------------------------------------------
library(magrittr)
c("data.table", "dplyr", "tidyr", "lubridate", "Rfacebook", "ggplot2", "googlesheets") %>%
sapply(require,character.only=T)
# Realizando la conexión APIS REDES SOCIALES
# Conexión facebook API ---------------------------------------------------
fb_oauth <- fbOAuth(app_id="1611650985792093",
app_secret="85db5a49077d074e84b5ce0a19659893",
extended_permissions = TRUE)
load("~/fb_oauth")
idFB_seat = 113144262054871
setwd("~/local/TimeSeries18/")
fb_oauth
####################################
#Creado por Fernando Dorantes Nieto <(°)
#                                     ( >)"
#                                      /|
####################################
######
#Cargando las librerías
######
# Librerias ---------------------------------------------------------------
library(magrittr)
c("data.table", "dplyr", "tidyr", "lubridate", "Rfacebook", "ggplot2", "googlesheets") %>%
sapply(require,character.only=T)
# Realizando la conexión APIS REDES SOCIALES
# Conexión facebook API ---------------------------------------------------
fb_oauth <- fbOAuth(app_id="1611650985792093",
app_secret="85db5a49077d074e84b5ce0a19659893",
extended_permissions = TRUE)
load("~/fb_oauth")
idFB_seat = 113144262054871
setwd("~/local/TimeSeries18/")
# Funciones ---------------------------------------------------------------
"%!in%" <- function(x,y)!("%in%"(x,y))
seatFB <- getPage(idFB_seat, n = 1e5, since="2015-01-01", until= Sys.Date(),
feed=F, reactions=F, token = fb_oauth)
seatFB %>%
write.csv("datos/facebook/Posteo_seat2016.csv",
row.names=F)
fb_oauth
fb_oauth <- "EAAW5ybyCkl0BAL7DqlOfN717Yu6GwcCHq3cIBIku7zho57VDhLw54t9m91npTiCQSSEimC8XQCNhCIJLhcOzwJPa2PnEeT30lHjDShDSIftJJyLTNQ8PMgdORqC4DWwMMnptays4OnTA8etZAxCGK5E7th0FSV7hmyYlOYAZDZD"
seatFB <- getPage(idFB_seat, n = 1e5, since="2015-01-01", until= Sys.Date(),
feed=F, reactions=F, token = fb_oauth)
seatFB %>%
write.csv("datos/facebook/Posteo_seat2016.csv",
row.names=F)
token<- "EAACEdEose0cBALl3YlzZAcxmosVDpG9AxZB8t1c83TjqHEZAHNkc9ZAM9xo9ZAZCcs2mBaixkwoKOg4RY3KN9lT69ACvmZC7Vpg2L6sG7HXdKgyCS9LM8jZCjDVrWagczuZA09Lbv9WRG3dcSYzCkZAXsZCZARnuuJcr4O3zHahWSrbtvXkAwUMHYaTMCku4Ge96YCIZD"
strfb <- "https://graph.facebook.com/v2.10/"
stringimprReachPost <- "/insights/post_impressions_organic_unique"
stringReactions <- "/insights/post_reactions_by_type_total"
strtk <- "?access_token="
conteo <- 0
impressionsFbPost <- lapply(seatFB$id, function(d){
z <- readLines(paste0(strfb, d,  stringimprReachPost, strtk, token ))
z <- unlist(z) %>% fromJSON
z <- z %>% unlist %>%
unname %>% .[3]
conteo <<- conteo + 1
print(conteo)
print(d)
Y <- data.frame(impressionsPost= as.numeric(z), id= d)
return(Y)
}) %>%
do.call("rbind", .)
conteo <- 0
impressionsFbPost <- lapply(seatFB$id, function(d){
z <- tryCatch(readLines(paste0(strfb, d,  stringimprReachPost, strtk, token )),
error = function(e){NULL})
if(is.null(z)){
return(z)
}
z <- unlist(z) %>% fromJSON
z <- z %>% unlist %>%
unname %>% .[3]
conteo <<- conteo + 1
print(conteo)
print(d)
Y <- data.frame(impressionsPost= as.numeric(z), id= d)
return(Y)
}) %>%
do.call("rbind", .)
