geom_text(aes(x = as.Date('2018-09-01'), y= 5.4e4,
label= paste('Pronóstico', "\n", "2019-01-01",
"\n",
format(diciembreIns, big.mark = ","),
sep=" ")),
color="steelblue")+
geom_text(aes(x = as.Date('2018-09-01'), y= 5e4,
label= paste( round(crecimiento3Ins, 2), "%",
"crecimiento",
"\n",
format(floor(diciembreIns - observadoEneroIns),
big.mark = ","), "\n",
"nuevos seguidores","*",
sep=" ")),
# angle=90,
color="steelblue") +
geom_text(aes(x = as.Date('2016-09-01'), y= 6.4e4,
label= paste("*", 'Cifras con respecto al 2017-01-01',
sep=" ")),
color="black", size=4)
dev.off()
InteraccionIns <- xts(ins$Totales, as.Date(ins$Fecha)) %>%
na.omit
InteraccionIns <- InteraccionIns["2016-01-01/"]
diferenciaINTins <- difftime(fechaFinal2, time(last(InteraccionIns)))
diferenciaINTins <- floor(as.numeric(diferenciaINTins)) +1
arimaIntins <-InteraccionIns %>%
coredata() %>%
ts %>%
Arima(order= c(0,1,2)) %>%
forecast(h=diferenciaINTins)
pronosticoIntins <- xts( arimaIntins$mean,
seq.POSIXt(as.POSIXct(last(InteraccionIns)),
length.out =  diferenciaINTins, by="day"))
tsInteraccionIns <- cbind(InteraccionIns, pronosticoIntins)
names(tsInteraccionIns)<- c("Observado", "Pronostico")
ggInteraccionIns <- data.frame(fecha = time(tsInteraccionIns),
data.frame(tsInteraccionIns))
promedioInsO <- mean(tsInteraccionIns["2017-01-01/2017-09-24"], na.rm=T)
maxInsO <- max(tsInteraccionIns["2017-01-01/2017-09-24"], na.rm=T)
minInsO <- min(tsInteraccionIns["2017-01-01/2017-09-24"], na.rm=T)
promedioInsP <-mean(tsInteraccionIns, na.rm=T)
Ins18 <- tsInteraccionIns["2018-06-01"] %>%
as.numeric %>% na.omit %>%  ceiling()
png("imagenes/interaccionesInstagram.png", width = 1200, height = 800, res=100)
ggInteraccionIns %>%
gather(tipo, valor, -fecha) %>%
ggplot(aes(x = fecha, y= valor, color=tipo))+
geom_line()+
theme_classic()+
theme(legend.position = "top",
axis.text.x = element_text(angle=45, hjust=1))+
scale_color_manual(values=c("steelblue", "darkred"),
labels=c("Observado", "Pronóstico"), name="")+
scale_x_date(date_breaks = "2 months")+
xlab("")+
ylab("Interacciones \n Instagram")+
geom_vline(xintercept = as.numeric(as.Date("2017-01-01")),
linetype=4, color="darkgreen")+
geom_vline(xintercept = as.numeric(as.Date("2017-09-24")),
linetype=4, color="darkgreen")+
geom_text(aes(x = as.Date('2017-05-01'), y= 3000,
label= paste("2017-01-01/2017-09-24")),
color="steelblue") +
geom_text(aes(x = as.Date('2017-05-01'), y= 2800,
label= paste(
"Máximo",
ceiling(maxInsO), "\n",
"Minimo",
round(minInsO, 2),  "\n",
"Promedio",
ceiling(promedioInsO),
sep=" "
)),
color="steelblue") +
geom_text(aes(x = as.Date('2018-02-01'), y= 3000,
label= paste("2017-10-01/2018-06-01")),
color="darkred") +
geom_text(aes(x = as.Date('2018-02-01'), y= 2800,
label= paste(
"Pronóstico Promedio" ,
ceiling(promedioInsP), #"\n",
# "2018-06-01 ->", Ins18,
sep=" "
)),
color="darkred")+
geom_vline(xintercept = as.numeric(as.Date("2018-06-01")),
linetype=4, color="darkred")
dev.off()
crecimientoYT <- Reduce(yt$Subscriptores, f= sum, accumulate = T)
crecimientoYT <- xts(crecimientoYT, as.Date(yt$Fecha))
yt$Crecimiento <- coredata(crecimientoYT)
png("imagenes/crecimientoYT.png", width = 1200, height = 800, res=100)
plot(crecimientoYT, type = "n", main="No pronosticable")
lines(crecimientoYT, col="steelblue")
dev.off()
png("imagenes/vistasYT.png", width = 1200, height = 800, res=100)
vistasYT <- xts(yt$Vistas, as.Date(yt$Fecha))
plot(vistasYT, type = "n", main="No pronosticable")
lines(vistasYT, col="steelblue")
dev.off()
visitasTs <- xts(sitioWeb$Visitas, as.Date(sitioWeb$Date)) %>%
na.omit
arimaVisitas <- visitasTs %>%
coredata %>%
ts %>%
Arima(order= c(1,0,2)) %>%
forecast(h= diferenciaWeb)
pronosticoVisitas <- xts( arimaVisitas$mean,
seq.POSIXt(as.POSIXct(last(visitasTs)),
length.out =  diferenciaWeb, by="day"))
tsVisitas <- cbind(visitasTs, pronosticoVisitas)
names(tsVisitas)<- c("Observado", "Pronostico")
ggtsVisitas <- data.frame(fecha = time(tsVisitas),
data.frame(tsVisitas))
promedioVisitasO <- mean(tsVisitas["2017-01-01/2017-09-24"], na.rm=T)
maxVisitas <- max(tsVisitas["2017-01-01/2017-09-24"], na.rm=T)
minVisitas <- min(tsVisitas["2017-01-01/2017-09-24"], na.rm=T)
promedioVisitas <-mean(pronosticoVisitas, na.rm=T)
Visitas18 <- pronosticoVisitas["2018-06-01"] %>%
as.numeric %>% na.omit %>%  ceiling()
png("imagenes/visitasWeb.png", width = 1200, height = 800, res=100)
ggtsVisitas %>%
gather(tipo, valor, -fecha) %>%
ggplot(aes(x = fecha, y= valor, color=tipo))+
geom_line()+
theme_classic()+
theme(legend.position = "top",
axis.text.x = element_text(angle=45, hjust=1))+
scale_color_manual(values=c("steelblue", "darkred"),
labels=c("Observado", "Pronóstico"), name="")+
scale_x_date(date_breaks = "2 months")+
xlab("")+
ylab("Visitas \n Sitio Web")+
geom_vline(xintercept = as.numeric(as.Date("2017-01-01")),
linetype=4, color="darkgreen")+
geom_vline(xintercept = as.numeric(as.Date("2017-09-24")),
linetype=4, color="darkgreen")+
geom_text(aes(x = as.Date('2017-05-01'), y= 6.5e4,
label= paste("2017-01-01/2017-09-24")),
color="steelblue") +
geom_text(aes(x = as.Date('2017-05-01'), y= 6e4,
label= paste(
"Máximo",
format(ceiling(maxVisitas), big.mark = ","), "\n",
"Minimo",
format(round(minVisitas, 2), big.mark = ","),  "\n",
"Promedio",
format(ceiling(promedioVisitasO), big.mark = ","),
sep=" "
)),
color="steelblue") +
geom_text(aes(x = as.Date('2018-02-01'), y=  6.5e4,
label= paste("2017-10-01/2018-06-01")),
color="darkred") +
geom_text(aes(x = as.Date('2018-02-01'), y=  6e4,
label= paste(
"Pronóstico Promedio" ,
format(ceiling(promedioVisitas), big.mark = ","), #"\n",
# "2018-06-01 ->", Ins18,
sep=" "
)),
color="darkred")+
geom_vline(xintercept = as.numeric(as.Date("2018-06-01")),
linetype=4, color="darkred")
dev.off()
configuraTs <- xts(sitioWeb$CarConfiguration, as.Date(sitioWeb$Date)) %>%
na.omit()
arimaConfigura <- configuraTs %>%
coredata %>%
ts %>%
Arima(order=c(2,1,1)) %>%
forecast(h= diferenciaWeb)
pronosticoConfigura <- xts( arimaConfigura$mean,
seq.POSIXt(as.POSIXct(last(configuraTs)),
length.out =  diferenciaWeb, by="day"))
tsConfigura <- cbind(configuraTs, pronosticoConfigura)
names(tsConfigura)<- c("Observado", "Pronostico")
ggtsConfigura <- data.frame(fecha = time(tsConfigura),
data.frame(tsConfigura))
promedioConfiguraO <- mean(tsConfigura["2017-01-01/2017-09-24"], na.rm=T)
maxConfigura <- max(tsConfigura["2017-01-01/2017-09-24"], na.rm=T)
minConfigura <- min(tsConfigura["2017-01-01/2017-09-24"], na.rm=T)
promedioConfigura <-mean(pronosticoConfigura, na.rm=T)
Configura18 <- pronosticoConfigura["2018-06-01"] %>%
as.numeric %>% na.omit %>%  ceiling()
ggtsConfigura %>%
gather(tipo, valor, -fecha) %>%
ggplot(aes(x = fecha, y= valor, color=tipo))+
geom_line()+
theme_classic()+
theme(legend.position = "top",
axis.text.x = element_text(angle=45, hjust=1))+
scale_color_manual(values=c("steelblue", "darkred"),
labels=c("Observado", "Pronóstico"), name="")+
scale_x_date(date_breaks = "2 months")+
xlab("")+
ylab("Configuraciones de automóviles")+
geom_vline(xintercept = as.numeric(as.Date("2017-01-01")),
linetype=4, color="darkgreen")+
geom_vline(xintercept = as.numeric(as.Date("2017-09-24")),
linetype=4, color="darkgreen")+
geom_text(aes(x = as.Date('2017-06-01'), y= 6500,
label= paste("2017-01-01/2017-09-24")),
color="steelblue") +
geom_text(aes(x = as.Date('2017-06-01'), y= 6000,
label= paste(
"Máximo",
format(ceiling(maxConfigura), big.mark = ","), "\n",
"Minimo",
format(round(minConfigura, 2), big.mark = ","),  "\n",
"Promedio",
format(ceiling(promedioConfiguraO), big.mark = ","),
sep=" "
)),
color="steelblue") +
geom_text(aes(x = as.Date('2018-02-01'), y=  6500,
label= paste("2017-10-01/2018-06-01")),
color="darkred") +
geom_text(aes(x = as.Date('2018-02-01'), y=  6000,
label= paste(
"Pronóstico Promedio" ,
format(ceiling(promedioConfigura), big.mark = ","), #"\n",
# "2018-06-01 ->", Ins18,
sep=" "
)),
color="darkred")+
geom_vline(xintercept = as.numeric(as.Date("2018-06-01")),
linetype=4, color="darkred")
png("imagenes/ConfiguracionesWeb.png", width = 1200, height = 800, res=100)
ggtsConfigura %>%
gather(tipo, valor, -fecha) %>%
ggplot(aes(x = fecha, y= valor, color=tipo))+
geom_line()+
theme_classic()+
theme(legend.position = "top",
axis.text.x = element_text(angle=45, hjust=1))+
scale_color_manual(values=c("steelblue", "darkred"),
labels=c("Observado", "Pronóstico"), name="")+
scale_x_date(date_breaks = "2 months")+
xlab("")+
ylab("Configuraciones de automóviles")+
geom_vline(xintercept = as.numeric(as.Date("2017-01-01")),
linetype=4, color="darkgreen")+
geom_vline(xintercept = as.numeric(as.Date("2017-09-24")),
linetype=4, color="darkgreen")+
geom_text(aes(x = as.Date('2017-06-01'), y= 6500,
label= paste("2017-01-01/2017-09-24")),
color="steelblue") +
geom_text(aes(x = as.Date('2017-06-01'), y= 6000,
label= paste(
"Máximo",
format(ceiling(maxConfigura), big.mark = ","), "\n",
"Minimo",
format(round(minConfigura, 2), big.mark = ","),  "\n",
"Promedio",
format(ceiling(promedioConfiguraO), big.mark = ","),
sep=" "
)),
color="steelblue") +
geom_text(aes(x = as.Date('2018-02-01'), y=  6500,
label= paste("2017-10-01/2018-06-01")),
color="darkred") +
geom_text(aes(x = as.Date('2018-02-01'), y=  6000,
label= paste(
"Pronóstico Promedio" ,
format(ceiling(promedioConfigura), big.mark = ","), #"\n",
# "2018-06-01 ->", Ins18,
sep=" "
)),
color="darkred")+
geom_vline(xintercept = as.numeric(as.Date("2018-06-01")),
linetype=4, color="darkred")
dev.off()
returnVisitsTs <- xts(sitioWeb$ReturnVisits, as.Date(sitioWeb$Date)) %>%
na.omit()
arimaReturn <- returnVisitsTs %>%
coredata %>%
ts %>%
Arima(order = c(2,1,2)) %>%
forecast(h= diferenciaWeb)
pronosticoReturn<- xts(arimaReturn$mean,
seq.POSIXt(as.POSIXct(last(returnVisitsTs)),
length.out =  diferenciaWeb, by="day"))
tsReturn <- cbind(returnVisitsTs, pronosticoReturn)
names(tsReturn)<- c("Observado", "Pronostico")
ggtsReturn <- data.frame(fecha = time(tsReturn),
data.frame(tsReturn))
promedioReturnO <- mean(tsReturn["2017-01-01/2017-09-24"], na.rm=T)
maxReturn <- max(tsReturn["2017-01-01/2017-09-24"], na.rm=T)
minReturn <- min(tsReturn["2017-01-01/2017-09-24"], na.rm=T)
promedioReturn <-mean(pronosticoReturn, na.rm=T)
Return18 <- pronosticoReturn["2018-06-01"] %>%
as.numeric %>% na.omit %>%  ceiling()
png("imagenes/returnvisitsWeb.png", width = 1200, height = 800, res=100)
ggtsReturn %>%
gather(tipo, valor, -fecha) %>%
ggplot(aes(x = fecha, y= valor, color=tipo))+
geom_line()+
theme_classic()+
theme(legend.position = "top",
axis.text.x = element_text(angle=45, hjust=1))+
scale_color_manual(values=c("steelblue", "darkred"),
labels=c("Observado", "Pronóstico"), name="")+
scale_x_date(date_breaks = "2 months")+
xlab("")+
ylab('"Return Visits"')+
geom_vline(xintercept = as.numeric(as.Date("2017-01-01")),
linetype=4, color="darkgreen")+
geom_vline(xintercept = as.numeric(as.Date("2017-09-24")),
linetype=4, color="darkgreen")+
geom_text(aes(x = as.Date('2017-06-01'), y= 2.5e4,
label= paste("2017-01-01/2017-09-24")),
color="steelblue") +
geom_text(aes(x = as.Date('2017-06-01'), y= 2.3e4,
label= paste(
"Máximo",
format(ceiling(maxReturn), big.mark = ","), "\n",
"Minimo",
format(round(minReturn, 2), big.mark = ","),  "\n",
"Promedio",
format(ceiling(promedioReturnO), big.mark = ","),
sep=" "
)),
color="steelblue") +
geom_text(aes(x = as.Date('2018-02-01'), y=  2.5e4,
label= paste("2017-10-01/2018-06-01")),
color="darkred") +
geom_text(aes(x = as.Date('2018-02-01'), y=  2.3e4,
label= paste(
"Pronóstico Promedio" ,
format(ceiling(promedioReturn), big.mark = ","), #"\n",
# "2018-06-01 ->", Ins18,
sep=" "
)),
color="darkred")+
geom_vline(xintercept = as.numeric(as.Date("2018-06-01")),
linetype=4, color="darkred")
dev.off()
timerateTs <- xts(sitioWeb$TimeRate, as.Date(sitioWeb$Date)) %>%
na.omit()
arimaRate <- timerateTs %>%
coredata %>%
ts %>%
Arima(order= c(2,1,2)) %>%
forecast(h=diferenciaWeb)
pronosticoRate <- xts(arimaRate$mean,
seq.POSIXt(as.POSIXct(last(timerateTs)),
length.out =  diferenciaWeb, by="day"))
tsRate <- cbind(timerateTs, pronosticoRate)
names(tsRate)<- c("Observado", "Pronostico")
ggtsRate <- data.frame(fecha = time(tsRate),
data.frame(tsRate))
promedioRateO <- mean(tsRate["2017-01-01/2017-09-24"], na.rm=T)
maxRate <- max(tsRate["2017-01-01/2017-09-24"], na.rm=T)
minRate <- min(tsRate["2017-01-01/2017-09-24"], na.rm=T)
promedioRate <-mean(pronosticoRate, na.rm=T)
Rate18 <- pronosticoRate["2018-06-01"] %>%
as.numeric %>% na.omit %>%  ceiling()
png("imagenes/timeRateWeb.png", width = 1200, height = 800, res=100)
ggtsRate %>%
gather(tipo, valor, -fecha) %>%
ggplot(aes(x = fecha, y= valor, color=tipo))+
geom_line()+
theme_classic()+
theme(legend.position = "top",
axis.text.x = element_text(angle=45, hjust=1))+
scale_color_manual(values=c("steelblue", "darkred"),
labels=c("Observado", "Pronóstico"), name="")+
scale_x_date(date_breaks = "2 months")+
xlab("")+
ylab('"Time Rate"')+
geom_vline(xintercept = as.numeric(as.Date("2017-01-01")),
linetype=4, color="darkgreen")+
geom_vline(xintercept = as.numeric(as.Date("2017-09-24")),
linetype=4, color="darkgreen")+
geom_text(aes(x = as.Date('2017-06-01'), y= 2.5e4,
label= paste("2017-01-01/2017-09-24")),
color="steelblue") +
geom_text(aes(x = as.Date('2017-06-01'), y= 2.3e4,
label= paste(
"Máximo",
format(ceiling(maxRate), big.mark = ","), "\n",
"Minimo",
format(round(minRate, 2), big.mark = ","),  "\n",
"Promedio",
format(ceiling(promedioRateO), big.mark = ","),
sep=" "
)),
color="steelblue") +
geom_text(aes(x = as.Date('2018-02-01'), y=  2.5e4,
label= paste("2017-10-01/2018-06-01")),
color="darkred") +
geom_text(aes(x = as.Date('2018-02-01'), y=  2.3e4,
label= paste(
"Pronóstico Promedio" ,
format(ceiling(promedioRate), big.mark = ","), #"\n",
# "2018-06-01 ->", Ins18,
sep=" "
)),
color="darkred")+
geom_vline(xintercept = as.numeric(as.Date("2018-06-01")),
linetype=4, color="darkred")
dev.off()
testTs <- xts(sitioWeb$TestDrive, as.Date(sitioWeb$Date)) %>%
na.omit()
testTs <- xts(sitioWeb$TestDrive, as.Date(sitioWeb$Date)) %>%
na.omit()
png("imagenes/testDriveWeb.png", width = 1200, height = 800, res=100)
plot(testTs, type = "n", main="No pronosticable")
lines(testTs, col="steelblue")
dev.off()
dealerTs <- xts(sitioWeb$DealerSearch, as.Date(sitioWeb$Date)) %>%
na.omit()
png("imagenes/dealersearchWeb.png", width = 1200, height = 800, res=100)
plot(dealerTs, type = "n", main="No pronosticable")
lines(dealerTs, col="steelblue")
dev.off()
####################################
#Creado por Fernando Dorantes Nieto <(°)
#                                     ( >)"
#                                      /|
####################################
######
#Cargando las librerías
######
# Librerias ---------------------------------------------------------------
library(magrittr)
c("dplyr", "tidyr", "lubridate", "Rfacebook", "ggplot2", "googlesheets") %>%
sapply(require,character.only=T)
# Realizando la conexión APIS REDES SOCIALES
# Conexión facebook API ---------------------------------------------------
fb_oauth <- fbOAuth(app_id="1611650985792093",
app_secret="85db5a49077d074e84b5ce0a19659893",
extended_permissions = TRUE)
load("~/fb_oauth")
idFB_seat = 113144262054871
fb_oauth
fb_oauth <- "EAAW5ybyCkl0BAL7DqlOfN717Yu6GwcCHq3cIBIku7zho57VDhLw54t9m91npTiCQSSEimC8XQCNhCIJLhcOzwJPa2PnEeT30lHjDShDSIftJJyLTNQ8PMgdORqC4DWwMMnptays4OnTA8etZAxCGK5E7th0FSV7hmyYlOYAZDZD"
X <- getPage(idFB_seat, n=100000, since="2017-07-31", until= Sys.Date(),
feed=T, reactions=F, token = fb_oauth)
X %>%
head
X %>%
separate(created_time,
c("Fecha", "Hora"), sep="T",remove = F)
X %>%
separate(created_time,
c("Fecha", "Hora"), sep="T",remove = F) %>%
filter(month(Fecha)==8)
X %>%
separate(created_time,
c("Fecha", "Hora"), sep="T",remove = F) %>%
filter(month(Fecha)==8) %>%  tally
X %>%
separate(created_time,
c("Fecha", "Hora"), sep="T",remove = F) %>%
filter(month(Fecha)==8) %>%  dim
Y <- read.csv("~/test.csv", header = T)
Y %>% head
Y %>%
filter(id_FbUsuario!=113144262054871) %>% dim
Y %>% dim
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>% head()
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>%
filter(mes(fecha_Creacion)==7)
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>%
filter(month(fecha_Creacion)==7)
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>%
filter(month(fecha_Creacion)==8) %>%  dim
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>%
filter(month(fecha_Creacion)==7) %>%  dim
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>%
filter(month(fecha_Creacion)==8) %>%  dim
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>%
mutate(mes = month(fecha_Creacion)) %>%
group_by(mes) %>%  tally
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>%
mutate(mes = month(fecha_Creacion)) %>%
mutate(anio = year(fecha_Creacion)) %>%
group_by(anio, mes) %>%  tally
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>%
mutate(mes = month(fecha_Creacion)) %>%
mutate(anio = year(fecha_Creacion)) %>%
group_by(anio, mes) %>%
filter(anio>2016)
Y %>%
filter(id_FbUsuario!=113144262054871) %>%
mutate(fecha_Creacion = as.Date(fecha_Creacion)) %>%
mutate(mes = month(fecha_Creacion)) %>%
mutate(anio = year(fecha_Creacion)) %>%
filter(anio>2016) %>%
group_by(anio, mes) %>%
tally
